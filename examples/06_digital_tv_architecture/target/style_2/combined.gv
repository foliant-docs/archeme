digraph {
graph [newrank = "true", rankdir = "LR", splines = "polyline", fontname = "PT Sans Caption", fontsize = "16"];
node [fixedsize = "true", fontname = "PT Sans Caption", fontsize = "16"];
edge [dir = "both", penwidth = "5", minlen = "3", fontname = "PT Sans Caption", fontsize = "16", fontcolor = "#cc0000", color = "#999999"];
"ott_dvr.mcast_network" [shape = "box", width = "3", height = "3", penwidth = "0", image = "./source/style_2/cloud.png", label = "Multicast\nNetwork"];
"ott_dvr.recorder" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Recorder"];
"ott_dvr.file_storage" [shape = "cylinder", width = "3", height = "3", style = "filled", penwidth = "5", color = "#99ccff", fillcolor = "#ffffff", label = "File Storage"];
"ott_dvr.license_server" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "DRM License Server"];
"ott_dvr.drm_proxy" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "DRM Proxy Server"];
"ott_dvr.hls_packager" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "HLS Packager"];
"ott_dvr.nginx" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "nginx"];
"ott_dvr.cdn" [shape = "box", width = "3", height = "3", penwidth = "0", image = "./source/style_2/cloud.png", label = "Content\nDelivery Network"];
"service_backend.services_db" [shape = "cylinder", width = "3", height = "3", style = "filled", penwidth = "5", color = "#99ccff", fillcolor = "#ffffff", label = "Services Database"];
"service_backend.images_storage" [shape = "cylinder", width = "3", height = "3", style = "filled", penwidth = "5", color = "#99ccff", fillcolor = "#ffffff", label = "Images Storage"];
"service_backend.collector" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Event Collector"];
"service_backend.main_api_service" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Main API Service"];
"service_backend.images_service" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Image Service"];
"service_backend.push_service" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Push Notification Service"];
"service_backend.queue_manager" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "Messages Queue Manager"];
"service_backend.ws_service" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "WebSocket Notification Service"];
"service_backend.nginx" [shape = "box", width = "4", height = "1", penwidth = "0", style = "filled", fillcolor = "#99ccff", label = "nginx"];
"service_backend.firebase" [shape = "box", width = "3", height = "3", penwidth = "0", image = "./source/style_2/cloud.png", label = "Firebase"];
"client" [shape = "box", width = "3", height = "3", penwidth = "0", image = "./source/style_2/client_device.png", labelloc = "b", label = "Client Device"];
subgraph cluster_1 {
labelloc = "b";
labeljust = "l";
shape = "box";
penwidth = "5";
margin = "36";
color = "#cccccc";
fillcolor = "#f0f0f0";
style = "dashed, filled";
label = "OTT DVR Subsystem";
"ott_dvr.recorder";
"ott_dvr.file_storage";
"ott_dvr.hls_packager";
"ott_dvr.nginx";
subgraph cluster_1_1 {
labelloc = "b";
labeljust = "l";
shape = "box";
penwidth = "5";
margin = "36";
color = "#cccccc";
fillcolor = "#f0f0f0";
style = "dashed, filled";
label = "DRM Infrastructure";
"ott_dvr.license_server";
"ott_dvr.drm_proxy";
}
}
subgraph cluster_2 {
labelloc = "b";
labeljust = "l";
shape = "box";
penwidth = "5";
margin = "36";
color = "#cccccc";
fillcolor = "#f0f0f0";
style = "dashed, filled";
label = "Service Backend";
"service_backend.services_db";
"service_backend.images_storage";
"service_backend.collector";
"service_backend.main_api_service";
"service_backend.images_service";
"service_backend.push_service";
"service_backend.queue_manager";
"service_backend.ws_service";
"service_backend.nginx";
}
"ott_dvr.cdn" -> "client" [color = "#009900", arrowtail = "none", label = <<b>HLS</b><br />streaming>];
"client" -> "ott_dvr.drm_proxy" [label = <<b>HTTP API</b><br />DRM keys>];
"service_backend.firebase" -> "client" [arrowtail = "none", label = <<b>HTTP API</b><br />push notifications>];
"client" -> "service_backend.nginx" [label = <<b>HTTPS</b><br />client APIs>];
"ott_dvr.mcast_network" -> "ott_dvr.recorder" [color = "#ccccff", arrowtail = "none", label = <<b>UDP Multicast</b><br />TV Channels>];
"ott_dvr.recorder" -> "ott_dvr.file_storage" [arrowtail = "none", label = "content and index files"];
"ott_dvr.file_storage" -> "ott_dvr.hls_packager" [arrowtail = "none", label = "index files"];
"ott_dvr.hls_packager" -> "ott_dvr.nginx" [label = <<b>FastCGI</b><br />HLS playlists>];
"ott_dvr.file_storage" -> "ott_dvr.nginx" [arrowtail = "none", label = "content files"];
"ott_dvr.recorder" -> "ott_dvr.drm_proxy" [label = <<b>HTTP API</b><br />DRM keys>];
"ott_dvr.drm_proxy" -> "ott_dvr.license_server";
"ott_dvr.nginx" -> "ott_dvr.cdn" [color = "#009900", arrowtail = "none", label = <<b>HLS</b><br />streaming>];
"service_backend.nginx" -> "service_backend.main_api_service";
"service_backend.nginx" -> "service_backend.collector" [label = <<b>HTTP API</b><br />events data>];
"service_backend.nginx" -> "service_backend.images_service" [label = <<b>HTTP</b><br />images>];
"service_backend.nginx" -> "service_backend.ws_service" [label = <<b>WebSocket</b><br />notifications>];
"service_backend.main_api_service" -> "service_backend.services_db";
"service_backend.main_api_service" -> "service_backend.queue_manager" [arrowtail = "none", label = <<b>NSQ</b><br />messages>];
"service_backend.images_service" -> "service_backend.images_storage";
"service_backend.queue_manager" -> "service_backend.push_service" [arrowtail = "none", label = <<b>NSQ</b><br />messages>];
"service_backend.queue_manager" -> "service_backend.ws_service" [arrowtail = "none", label = <<b>NSQ</b><br />messages>];
"service_backend.push_service" -> "service_backend.firebase" [arrowtail = "none", label = <<b>HTTP API</b><br />push notifications>];
subgraph {
rank = "same";
"ott_dvr.mcast_network";
"ott_dvr.recorder";
"ott_dvr.file_storage";
"service_backend.services_db";
"service_backend.main_api_service";
"service_backend.images_service";
"service_backend.images_storage";
}
subgraph {
rank = "same";
"ott_dvr.license_server";
"ott_dvr.drm_proxy";
"ott_dvr.hls_packager";
"service_backend.queue_manager";
"service_backend.collector";
"service_backend.nginx";
}
subgraph {
rank = "same";
"ott_dvr.nginx";
"service_backend.push_service";
"service_backend.ws_service";
}
subgraph {
rank = "same";
"ott_dvr.cdn";
"service_backend.firebase";
}
subgraph {
rank = "same";
"client";
}
}
